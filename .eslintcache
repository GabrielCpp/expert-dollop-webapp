[{"/home/gabriel/Local/workspace/t2-webapp/src/App.tsx":"1","/home/gabriel/Local/workspace/t2-webapp/src/index.tsx":"2","/home/gabriel/Local/workspace/t2-webapp/src/modules/index.ts":"3","/home/gabriel/Local/workspace/t2-webapp/src/reportWebVitals.ts":"4","/home/gabriel/Local/workspace/t2-webapp/src/components/index.tsx":"5","/home/gabriel/Local/workspace/t2-webapp/src/i18n.ts":"6","/home/gabriel/Local/workspace/t2-webapp/src/services/ajv.ts":"7","/home/gabriel/Local/workspace/t2-webapp/src/components/mouse-over-popover.tsx":"8","/home/gabriel/Local/workspace/t2-webapp/src/common/container-context/index.ts":"9","/home/gabriel/Local/workspace/t2-webapp/src/modules/axios-provider.ts":"10","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query-builder.ts":"11","/home/gabriel/Local/workspace/t2-webapp/src/services/index.ts":"12","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/database-table.ts":"13","/home/gabriel/Local/workspace/t2-webapp/src/services/external.ts":"14","/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/helpers.ts":"15","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-change-emitter.ts":"16","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-record-change-emitter.ts":"17","/home/gabriel/Local/workspace/t2-webapp/src/services/api/index.ts":"18","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query.ts":"19","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table.ts":"20","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/database.ts":"21","/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/index.ts":"22","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-transaction.ts":"23","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-record.ts":"24","/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query-engine.ts":"25","/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/async-rest-cursor.ts":"26","/home/gabriel/Local/workspace/t2-webapp/src/modules/services.ts":"27","/home/gabriel/Local/workspace/t2-webapp/src/services/api/project-container-definition-service.ts":"28"},{"size":2165,"mtime":1609192138044,"results":"29","hashOfConfig":"30"},{"size":634,"mtime":1609385886368,"results":"31","hashOfConfig":"30"},{"size":330,"mtime":1608828362498,"results":"32","hashOfConfig":"30"},{"size":425,"mtime":1608337719197,"results":"33","hashOfConfig":"30"},{"size":6464,"mtime":1609193979480,"results":"34","hashOfConfig":"30"},{"size":399,"mtime":1609102861230,"results":"35","hashOfConfig":"30"},{"size":575,"mtime":1609171203955,"results":"36","hashOfConfig":"30"},{"size":2022,"mtime":1609191668064,"results":"37","hashOfConfig":"30"},{"size":505,"mtime":1609386204176,"results":"38","hashOfConfig":"30"},{"size":472,"mtime":1609439788720,"results":"39","hashOfConfig":"30"},{"size":1994,"mtime":1609456856795,"results":"40","hashOfConfig":"30"},{"size":145,"mtime":1609439972860,"results":"41","hashOfConfig":"30"},{"size":1911,"mtime":1609390543104,"results":"42","hashOfConfig":"30"},{"size":49,"mtime":1609439963159,"results":"43","hashOfConfig":"30"},{"size":879,"mtime":1609446455395,"results":"44","hashOfConfig":"30"},{"size":873,"mtime":1609386478520,"results":"45","hashOfConfig":"30"},{"size":2131,"mtime":1609386473608,"results":"46","hashOfConfig":"30"},{"size":162,"mtime":1609390812964,"results":"47","hashOfConfig":"30"},{"size":771,"mtime":1609456684711,"results":"48","hashOfConfig":"30"},{"size":4241,"mtime":1609386477264,"results":"49","hashOfConfig":"30"},{"size":2409,"mtime":1609387073768,"results":"50","hashOfConfig":"30"},{"size":153,"mtime":1609446459055,"results":"51","hashOfConfig":"30"},{"size":3927,"mtime":1609349044104,"results":"52","hashOfConfig":"30"},{"size":915,"mtime":1609349044712,"results":"53","hashOfConfig":"30"},{"size":7826,"mtime":1609458509167,"results":"54","hashOfConfig":"30"},{"size":1297,"mtime":1609439526897,"results":"55","hashOfConfig":"30"},{"size":529,"mtime":1609461197411,"results":"56","hashOfConfig":"30"},{"size":757,"mtime":1609461153087,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"23c10n",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gabriel/Local/workspace/t2-webapp/src/App.tsx",[],"/home/gabriel/Local/workspace/t2-webapp/src/index.tsx",[],"/home/gabriel/Local/workspace/t2-webapp/src/modules/index.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/reportWebVitals.ts",[],["122","123"],"/home/gabriel/Local/workspace/t2-webapp/src/components/index.tsx",["124"],"/home/gabriel/Local/workspace/t2-webapp/src/i18n.ts",[],["125","126"],"/home/gabriel/Local/workspace/t2-webapp/src/services/ajv.ts",[],["127","128"],"/home/gabriel/Local/workspace/t2-webapp/src/components/mouse-over-popover.tsx",[],["129","130"],"/home/gabriel/Local/workspace/t2-webapp/src/common/container-context/index.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/modules/axios-provider.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query-builder.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/services/index.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/database-table.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/services/external.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/helpers.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-change-emitter.ts",[],["131","132"],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-record-change-emitter.ts",[],["133","134"],"/home/gabriel/Local/workspace/t2-webapp/src/services/api/index.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table.ts",["135"],"import { TableRecord, UniqueIndexKeyBuilder, PrimaryKey, getPk, TableWatcher } from './table-record'\nimport { TableTransaction } from './table-transaction';\nimport { RecordChangeEmitter, Unsubscribe, WatchEvent } from './table-record-change-emitter';\nimport { TableChangeEmitter } from './table-change-emitter';\n\nexport class TableRecordDetails extends RecordChangeEmitter {\n    public value: TableRecord;\n\n    public constructor(value: TableRecord) {\n        super();\n        this.value = value\n    }\n}\n\nexport class PrimaryIndex {\n    public records = new Map<PrimaryKey, TableRecordDetails>();\n    public buildKey: UniqueIndexKeyBuilder;\n    public fieldPath: string | undefined;\n\n    public constructor(buildKey: UniqueIndexKeyBuilder, fieldPath?: string) {\n        this.buildKey = buildKey;\n        this.fieldPath = fieldPath\n    }\n}\n\nexport class Table {\n    private tableChangeEmitter = new TableChangeEmitter();\n    private primaryIndex: PrimaryIndex;\n\n    public constructor(\n        records: TableRecord[]=[],\n        primaryIndex: PrimaryIndex = new PrimaryIndex(getPk, 'id'),\n    ) {\n        this.primaryIndex = primaryIndex;\n        this.upsertMany(new TableTransaction(this.tableChangeEmitter), records)\n    }\n\n    public get tableEventEmitter(): TableChangeEmitter {\n        return this.tableChangeEmitter;\n    }\n\n    public get buildPk(): UniqueIndexKeyBuilder {\n        return this.primaryIndex.buildKey;\n    }\n\n    public get records(): TableRecord[] {\n        const records: TableRecord[] = [];\n\n        for(const record of this.primaryIndex.records.values()) {\n            records.push(record.value)\n        }\n\n        return records;\n    }\n\n    public get primaryKeys(): PrimaryKey[] {\n        const keys: PrimaryKey[] = [];\n\n        for(const primaryKey of this.primaryIndex.records.keys()) {\n            keys.push(primaryKey)\n        }\n\n        return keys;\n    }\n\n    public where<T extends Record<string, unknown>>(predicate: (record: T) => boolean): T[] {\n        const records: T[] = [];\n\n        for(const record of this.primaryIndex.records.values()) {\n            if(predicate(record.value as T)) {\n                records.push(record.value as T)\n            }            \n        }\n\n        return records;\n    }\n\n    public upsertMany(eventCumulator: TableTransaction, records: TableRecord[]): void {\n        for(const record of records) {\n            const primaryKey = this.primaryIndex.buildKey(record)\n            let recordDetails = this.primaryIndex.records.get(primaryKey)\n\n            if(recordDetails === undefined) {                \n                recordDetails = new TableRecordDetails(record);\n                this.primaryIndex.records.set(primaryKey, recordDetails);\n                eventCumulator.addRecordInsertEvent(recordDetails, record)\n            }\n            else {\n                const before = recordDetails.value;\n                recordDetails.value = record;\n                eventCumulator.addRecordUpdateEvent(recordDetails, before, record)\n            }\n        }\n    }\n\n    public removeMany(eventCumulator: TableTransaction, primaryKeys: PrimaryKey[]) {\n        for(const primaryKey of primaryKeys) {\n            let recordDetails = this.primaryIndex.records.get(primaryKey)\n\n            if(recordDetails !== undefined) {       \n                this.primaryIndex.records.delete(primaryKey);\n                eventCumulator.addRecordRemoveEvent(recordDetails, recordDetails.value)         \n            }\n        }\n    }\n\n    public truncate(eventCumulator: TableTransaction) {\n        for(const recordDetails of this.primaryIndex.records.values()) {\n            eventCumulator.addRecordRemoveEvent(recordDetails, recordDetails.value)   \n        }\n\n        this.primaryIndex.records.clear()\n    }\n\n    public watchRecord(primaryKey: string, events: WatchEvent): Unsubscribe {\n        const recordDetails = this.getRecord(primaryKey);\n        return recordDetails.watchEvents(events);\n    }\n\n    public getRecord(primaryKey: PrimaryKey): TableRecordDetails {\n        const recordDetails = this.primaryIndex.records.get(primaryKey) \n\n        if(recordDetails === undefined) {\n            throw new Error(`No such key ${primaryKey}`)\n        }\n\n        return recordDetails;\n    }\n}\n",["136","137"],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/database.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/index.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-transaction.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/table-record.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/redux-db/query-engine.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/common/async-cursor/async-rest-cursor.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/modules/services.ts",[],"/home/gabriel/Local/workspace/t2-webapp/src/services/api/project-container-definition-service.ts",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"138","replacedBy":"150"},{"ruleId":"140","replacedBy":"151"},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","replacedBy":"153"},{"ruleId":"138","replacedBy":"154"},{"ruleId":"140","replacedBy":"155"},{"ruleId":"142","severity":1,"message":"156","line":1,"column":65,"nodeType":"144","messageId":"145","endLine":1,"endColumn":77},{"ruleId":"138","replacedBy":"157"},{"ruleId":"140","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar",["159"],["160"],["159"],["160"],["159"],["160"],["159"],["160"],["159"],["160"],"'TableWatcher' is defined but never used.",["159"],["160"],"no-global-assign","no-unsafe-negation"]